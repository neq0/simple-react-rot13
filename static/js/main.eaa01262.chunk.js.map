{"version":3,"sources":["logo.svg","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","onClick","App","className","href","name","id","cols","rows","rot13area","document","querySelector","value","str","strRot13","split","forEach","c","ascii","charCodeAt","String","fromCharCode","rot13","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8OAAe,I,WCUAA,EARA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvB,OACC,wBAAQA,QAASA,EAAjB,SACED,KCgCWE,G,MAhBH,WACV,OACE,sBAAKC,UAAU,MAAf,UACE,mDACA,4BAAG,mBAAGC,KAAK,sCAAR,8BACH,qBAAKD,UAAU,eAAf,SACE,0BAAUE,KAAK,GAAGC,GAAG,aAAaC,KAAK,KAAKC,KAAK,SAEnD,cAAC,EAAD,CAAQR,KAAK,QAAQC,QAAS,WAC5B,IAAIQ,EAAYC,SAASC,cAAc,eACvCF,EAAUG,MAxBJ,SAACC,GACb,IAAIC,EAAW,GAUf,OATAD,EAAIE,MAAM,IAAIC,SAAQ,SAAAC,GACpB,IAAIC,EAAQD,EAAEE,WAAW,GAEvBL,GADC,IAAMI,GAASA,GAAS,GACbE,OAAOC,aAAa,IAAOH,EAAQ,GAAM,IAAM,IACrD,IAAMA,GAASA,GAAS,IAClBE,OAAOC,aAAa,IAAOH,EAAQ,GAAM,IAAM,IAE/CD,KAETH,EAaiBQ,CAAMb,EAAUG,eCnB3BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,M","file":"static/js/main.eaa01262.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst Button = ({ text, onClick }) => {\r\n\treturn (\r\n\t\t<button onClick={onClick}>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Button from \"./components/Button\";\nimport \"./components/Button.css\";\n\n\n\nconst rot13 = (str) => {\n  let strRot13 = \"\";\n  str.split(\"\").forEach(c => {\n    let ascii = c.charCodeAt(0);\n    if(65 <= ascii && ascii <= 90)\n      strRot13 += String.fromCharCode(65 + ((ascii - 65) + 13) % 26);\n    else if(97 <= ascii && ascii <= 122)\n      strRot13 += String.fromCharCode(97 + ((ascii - 97) + 13) % 26);\n    else\n      strRot13 += c;\n  });\n  return strRot13;\n}\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Rot13!</h1>\n      <p><a href=\"https://en.wikipedia.org/wiki/ROT13\">What is Rot13?</a></p>\n      <div className=\"align-center\">\n        <textarea name=\"\" id=\"rot13-text\" cols=\"30\" rows=\"10\"></textarea>\n      </div>\n      <Button text=\"Rot13\" onClick={() => {\n        let rot13area = document.querySelector(\"#rot13-text\");\n        rot13area.value = rot13(rot13area.value);\n      }}></Button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}